[{"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\index.js":"1","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\App.js":"2","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\theme.js":"3","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\NotFound.js":"4","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Contact\\Contact.js":"5","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\OnlineTest\\TestPage.js":"6","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Home\\Home.js":"7","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Leaderboard\\Chart.js":"8","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Tasks\\TaskInfo\\TaskInfo.js":"9","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Navbar.js":"10","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Footer\\Footer.js":"11","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Tasks\\TaskPage.js":"12","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Home\\Charts.js":"13","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\OnlineTest\\onlineTest.js":"14","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Contact\\OC.js":"15","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Home\\Header.js":"16","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Contact\\Groups.js":"17","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Home\\Quotes.js":"18","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Home\\Categories.js":"19","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Tasks\\TaskCard.js":"20","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Footer\\FooterContact.js":"21","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Home\\PartiChart.js":"22","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Contact\\Contributors.js":"23"},{"size":160,"mtime":1624702576174,"results":"24","hashOfConfig":"25"},{"size":1835,"mtime":1627034847497,"results":"26","hashOfConfig":"25"},{"size":552,"mtime":1623222279970,"results":"27","hashOfConfig":"25"},{"size":645,"mtime":1628107689561,"results":"28","hashOfConfig":"25"},{"size":312,"mtime":1628786926711,"results":"29","hashOfConfig":"25"},{"size":2695,"mtime":1626620602643,"results":"30","hashOfConfig":"25"},{"size":643,"mtime":1623329686428,"results":"31","hashOfConfig":"25"},{"size":3835,"mtime":1628108812896,"results":"32","hashOfConfig":"25"},{"size":7895,"mtime":1628107689563,"results":"33","hashOfConfig":"25"},{"size":7679,"mtime":1627759828658,"results":"34","hashOfConfig":"25"},{"size":2726,"mtime":1627719931990,"results":"35","hashOfConfig":"25"},{"size":2718,"mtime":1627760501708,"results":"36","hashOfConfig":"25"},{"size":197,"mtime":1623222279950,"results":"37","hashOfConfig":"25"},{"size":6764,"mtime":1628579924213,"results":"38","hashOfConfig":"25"},{"size":6340,"mtime":1628787145097,"results":"39","hashOfConfig":"25"},{"size":2947,"mtime":1627761245724,"results":"40","hashOfConfig":"25"},{"size":3374,"mtime":1627402984362,"results":"41","hashOfConfig":"25"},{"size":2262,"mtime":1627456103071,"results":"42","hashOfConfig":"25"},{"size":5092,"mtime":1627312558685,"results":"43","hashOfConfig":"25"},{"size":6424,"mtime":1627760234998,"results":"44","hashOfConfig":"25"},{"size":903,"mtime":1627748941050,"results":"45","hashOfConfig":"25"},{"size":811,"mtime":1623222279952,"results":"46","hashOfConfig":"25"},{"size":2502,"mtime":1628787150890,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1hg0bjn",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\index.js",[],["101","102"],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\App.js",[],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\theme.js",[],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\NotFound.js",[],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Contact\\Contact.js",["103"],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\OnlineTest\\TestPage.js",[],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Home\\Home.js",["104"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Header from './Header'\r\nimport Charts from './Charts'\r\nimport Categories from './Categories'\r\nimport Quotes from './Quotes'\r\n\r\nfunction Home() {\r\n    const useStyles = makeStyles({\r\n        homeContainer: {\r\n          \r\n        },\r\n        cats:{\r\n          marginTop: '0px'\r\n        }\r\n    });\r\n      const classes = useStyles();\r\n    return (\r\n      <div className={classes.homeContainer}>\r\n        <Header />\r\n        <div id=\"catt\" className={classes.cats}><Categories  /></div>\r\n        <Quotes />\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home\r\n","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Leaderboard\\Chart.js",["105"],"import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport data from '../../Data/LeaderBoard.json'\r\nimport theme from '../../theme';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#06192eb0',\r\n    backdropFilter: 'blur(10px)',\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n  papper: {\r\n    width: '20%',\r\n    height: '1000px',\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(even)': {\r\n      backgroundColor: '#183d5de8',\r\n    \r\n    },\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: '#183d5dc0',\r\n      \r\n      },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: '80%',\r\n    marginLeft: '10%',\r\n    marginBottom: '100px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      position: 'relative',\r\n      width: '95%',\r\n      margin: 'auto',\r\n      marginTop: '0px',\r\n  },\r\n\r\n  },\r\n  update: {\r\n    width: '80%',\r\n    marginLeft: '10%',\r\n    marginTop: '10px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      position: 'relative',\r\n      width: '100%',\r\n      margin: 'auto',\r\n   \r\n      marginLeft: '20px'\r\n  },\r\n  },\r\n  updateContainer: {\r\n    marginTop: '110px',\r\n    display: 'flex',\r\n    height: 'min-content',\r\n    flexDirection: 'column',\r\n  },\r\n  body: {\r\n    color: '#fff',\r\n    borderBottom: '1px solid rgb(12 76 126)',\r\n    zIndex: '1'\r\n  },\r\n  papper: {\r\n    marginTop: '150px',\r\n    marginTop: '50px',\r\n  },\r\n  tBody: {\r\n    borderSpacing: '0px',\r\n    borderCollapse: 'separate',\r\n  }\r\n});\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer className={classes.papper}>\r\n      <div className={classes.updateContainer}>\r\n        <Typography className={classes.update} variant='caption'>Leaderboard will be updated on 10.08.2021 12AM</Typography>\r\n      <Typography className={classes.update} variant='caption'>Last updated: 05.08.2021 12AM</Typography>\r\n      </div>\r\n      \r\n      <br></br>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell style={{color: '#3ed1b8'}}>Rank</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Nickname</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Class</StyledTableCell>\r\n            <StyledTableCell align=\"center\">No. Of Tasks Accepted</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Points</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className={classes.tBody}>\r\n          {data.map((list, index) => (\r\n            <StyledTableRow key={index} >\r\n              <StyledTableCell component=\"th\" scope=\"row\" style={{color: '#3ed1b8', fontWeight: 'bold'}} className={classes.body}>\r\n                {list.index}\r\n              </StyledTableCell>\r\n              <StyledTableCell  className={classes.body} align=\"center\">{list.name}</StyledTableCell>\r\n              <StyledTableCell  className={classes.body} align=\"center\">{list.class}</StyledTableCell>\r\n              <StyledTableCell  className={classes.body} align=\"center\">{list.tasks}</StyledTableCell>\r\n              <StyledTableCell  className={classes.body} align=\"center\">{list.points}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Tasks\\TaskInfo\\TaskInfo.js",["106"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '@material-ui/core';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport '../../../App.css'\r\nimport { Container } from '@material-ui/core';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport taskDetails from '../../../Data/tasks.json'\r\nimport { Group } from '@material-ui/icons';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: '400px'\r\n  },\r\n\r\n  ss: {\r\n    paddingTop: '20px'\r\n  },\r\n\r\n  container: {\r\n    padding: '0',\r\n    height: '100vh',\r\n    color: '#fff',\r\n    marginBottom: '600px'\r\n  },\r\n\r\n  details: {\r\n    background: 'linear-gradient(144deg, #275d8ccf, #21466766)',\r\n    backdropFilter: 'blur(10px)',\r\n    maxWidth: '800px',\r\n    borderRadius: '20px',\r\n    width: '70%',\r\n    padding: '0',\r\n    height: 'min-content',\r\n    margin: 'auto',\r\n    marginTop: '20px',\r\n    color: '#fff',\r\n    [theme.breakpoints.down('xs')]: {\r\n      position: 'relative',\r\n      width: '95%',\r\n      margin: 'auto',\r\n      marginTop: '20px'\r\n    },\r\n  },\r\n  appbar: {\r\n    width: '100%',\r\n    backgroundColor: '#06192e',\r\n    borderTopLeftRadius: '20px',\r\n    borderTopRightRadius: '20px',\r\n    borderBottomLeftRadius: '0px',\r\n    borderBottomRightRadius: '0px',\r\n\r\n  },\r\n  title: {\r\n    width: '85%',\r\n    margin: 'auto',\r\n    color: '#fff',\r\n    fontStyle: 'bold',\r\n    marginTop: '200px',\r\n    maxWidth: '800px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginTop: '100px'\r\n    },\r\n  },\r\n\r\n  text: {\r\n    color: '#fff',\r\n    marginBottom: '20px',\r\n  },\r\n  switcher: {\r\n    color: '#3ed1b8',\r\n  }, \r\n  taskname: {\r\n    width: '70%',\r\n  },\r\n  form: {\r\n    borderRadius: '10px',\r\n    width: \"80%\",\r\n    marginLeft: '10%',\r\n    marginBottom: '50px',\r\n  }\r\n}));\r\n\r\nexport default function FullWidthTabs() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  let { id } = useParams();\r\n\r\n  var result = taskDetails.filter(obj => {\r\n    return obj.id === id\r\n  })\r\n  const details = result[0]\r\n\r\n  console.log(details.submit)\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      \r\n    <div className={classes.ss}>\r\n\r\n      <Container className=\"taskname\" color=\"primary\">\r\n      \r\n        <Typography variant=\"h4\" className={classes.title} color=\"#ffffff\"><Button href=\"/tasks\" color=\"secondary\" variant='outlined' style={{marginRight: '50px', width: '100px'}}>Go Back</Button>{details.taskName}</Typography></Container>\r\n    \r\n    <Container fixed className={classes.details}>\r\n        \r\n<AppBar position=\"static\" className={classes.appbar} color=\"#0f7bc7\" elevation=\"0\">\r\n        <Tabs\r\n          value={value}\r\n         className={classes.switcher}\r\n          onChange={handleChange}   \r\n          indicatorColor=\"dfdfgdfdg\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Details\" {...a11yProps(0)} />\r\n          \r\n          <Tab label=\"Submit\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}><Typography className={classes.text}>\r\n        {details.description}\r\n        </Typography>\r\n        <ul style={{ color: '#fefefe', marrginTop: '90px'}}>\r\n          { details.point1 !== \"\" && <li>{details.point1}</li> }\r\n          { details.point2 !== \"\" && <li>{details.point2}</li> }\r\n          { details.point3 !== \"\" && <li>{details.point3}</li> }\r\n          { details.point4 !== \"\" && <li>{details.point4}</li> }\r\n          { details.point5 !== \"\" && <li>{details.point5}</li> }\r\n          { details.point6 !== \"\" && <li>{details.point6}</li> }\r\n          { details.point7 !== \"\" && <li>{details.point7}</li> }\r\n        </ul>\r\n<br></br>\r\n        </TabPanel>\r\n       \r\n        <TabPanel value={value} index={1} dir={theme.direction}> <Typography  className={classes.text}>\r\n        Complete the below form and hit the “SUBMIT” button and your task will be reviewed by the mentors in around 48 hours\r\nand you will get a confirmation email. DO NOT QUESTION ABOUT YOUR SUBMITTIONS UNTIL 48 HOURS HAVE PASSED.\r\n    <ul>\r\n      <li> <b>Plagiarism is strictly prohibited. If you cheat by using other people's work your task submission will be disqualified. This is the one and only warning!</b> </li>\r\n      <li>If you have any problems feel free to <Link to=\"/contact\">contact us</Link></li>\r\n      <li>You can use both Sinhala and English languages.</li>\r\n      <li>Students with the highest marks for the competition will be the winners.</li>\r\n      <li>Not only completing the task will add you points, but also quality of the task, final\r\nproduction, how you work with your mentors and lowest number of tasks rejections will add you more points.</li>\r\n      <li>Google is only a reference, do not copy other products and send us.</li>\r\n      <li>Do not spam in Discord channel, WhatsApp group or via emails. We will\r\nban you from the competition.</li>\r\n    </ul>\r\n</Typography>\r\n<br></br>\r\n<br></br>\r\n\r\n      <Button href={details.submit} className={classes.form} color=\"secondary\" target=\"_blank\" variant=\"contained\">Submit Task</Button>\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n\r\n\r\n      </Container>\r\n      </div>\r\n      </Container>\r\n     \r\n  \r\n    \r\n  );\r\n}","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Navbar.js",["107"],"import {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles,\r\n  IconButton,\r\n  Drawer,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport logoGIF from \"../Img/BITS-logo-w.gif\";\r\nimport Countdown from 'react-countdown';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  header: {\r\n    transition: \"0.5s ease\",\r\n    background: \"transparent\",\r\n    paddingRight: \"79px\",\r\n    paddingLeft: \"50px\",\r\n    color: \"#183d5d\",\r\n    \"@media (max-width: 900px)\": {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n\r\n  logo: {\r\n    fontFamily: \"Work Sans, sans-serif\",\r\n    fontWeight: 600,\r\n    color: \"#183d5d\",\r\n    textAlign: \"left\",\r\n  },\r\n  logoMobile: {},\r\n  menuButton: {\r\n    fontFamily: \"Titillium Web, sans-serif\",\r\n    fontWeight: 700,\r\n    size: \"25px\",\r\n    marginLeft: \"38px\",\r\n    textDecoration: \"none\",\r\n    color: \"#fff\",\r\n  },\r\n  mobileMenuButton: {\r\n    fontFamily: \"Titillium Web, sans-serif\",\r\n    fontWeight: 700,\r\n    size: \"18px\",\r\n    marginLeft: \"38px\",\r\n    textDecoration: \"none\",\r\n    color: \"#fff\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  drawerContainer: {\r\n    width: \"200px\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#072540\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n\r\n  headerActive: {\r\n    transition: \"0.5s ease\",\r\n    backgroundColor: \"#06192e\",\r\n    height: \"80px\",\r\n    paddingRight: \"79px\",\r\n    paddingLeft: \"118px\",\r\n    color: \"#183d5d\",\r\n    \"@media (max-width: 900px)\": {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n\r\n  menu: {\r\n    color: \"#3ed1b8\",\r\n  },\r\n}));\r\n\r\nexport default function Nav() {\r\n  const {\r\n    header,\r\n    menuButton,\r\n    menu,\r\n    headerActive,\r\n    mobileMenuButton,\r\n    toolbar,\r\n    drawerContainer,\r\n    drawer,\r\n  } = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n    drawerOpen: false,\r\n  });\r\n\r\n  const [nav, setNav] = useState(false);\r\n\r\n  const changeBackground = () => {\r\n    if (window.scrollY >= 100) {\r\n      setNav(true);\r\n    } else {\r\n      setNav(false);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", changeBackground);\r\n\r\n  const { mobileView, drawerOpen } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 900\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", () => setResponsiveness());\r\n    };\r\n  }, []);\r\n\r\n  const displayDesktop = () => {\r\n    return (\r\n      <Toolbar className={toolbar}>\r\n        {femmecubatorLogo}\r\n        <div>{getMenuButtons()}</div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const displayMobile = () => {\r\n    const handleDrawerOpen = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n    const handleDrawerClose = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n    return (\r\n      <Toolbar>\r\n        <IconButton\r\n          {...{\r\n            edge: \"start\",\r\n            color: \"#fff\",\r\n            \"aria-label\": \"menu\",\r\n            \"aria-haspopup\": \"true\",\r\n            onClick: handleDrawerOpen,\r\n          }}\r\n        >\r\n          <MenuIcon className={menu} />\r\n        </IconButton>\r\n\r\n        <Drawer\r\n          {...{\r\n            anchor: \"left\",\r\n            open: drawerOpen,\r\n            onClose: handleDrawerClose,\r\n            onClick: handleDrawerClose,\r\n          }}\r\n          className={drawer}\r\n        >\r\n          <div className={drawerContainer}>\r\n            <img\r\n              src={logoGIF}\r\n              to=\"/\"\r\n              alt=\"logo\"\r\n              style={{\r\n                height: \"100px\",\r\n                width: \"100px\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n              }}\r\n            ></img>\r\n            {getDrawerChoices()}\r\n          </div>\r\n        </Drawer>\r\n\r\n        <div>{femmecubatorLogo}</div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const getDrawerChoices = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-between\",\r\n          height: \"200px\",\r\n        }}\r\n      >\r\n\r\n        <NavLink\r\n          className={mobileMenuButton}\r\n          to=\"/\"\r\n          exact\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          Home\r\n        </NavLink>\r\n        \r\n        <NavLink\r\n          className={mobileMenuButton}\r\n          to=\"/tasks\"\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          Tasks\r\n        </NavLink>\r\n        <NavLink\r\n          className={mobileMenuButton}\r\n          to=\"/onlinetest\"\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          Online Tests\r\n        </NavLink>\r\n        <NavLink\r\n          className={mobileMenuButton}\r\n          to=\"/leaderboard\"\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          LeaderBoard\r\n        </NavLink>\r\n        <NavLink\r\n          className={mobileMenuButton}\r\n          to=\"/contact\"\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          Contact\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const femmecubatorLogo = (\r\n    <NavLink to=\"/\"><img src={logoGIF} alt=\"logo\" style={{ height: \"100px\" }}></img></NavLink> \r\n  );\r\n\r\n  const getMenuButtons = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          width: \"600px\",\r\n        }}\r\n      >\r\n        <NavLink\r\n          className={menuButton}\r\n          to=\"/\"\r\n          exact\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"20px\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          Home\r\n        </NavLink>\r\n        <NavLink\r\n          className={menuButton}\r\n          to=\"/tasks\"\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"20px\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          Tasks\r\n        </NavLink>\r\n        <NavLink\r\n          className={menuButton}\r\n          to=\"/onlinetest\"\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"20px\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          Online Tests\r\n        </NavLink>\r\n        <NavLink\r\n          className={menuButton}\r\n          to=\"/leaderboard\"\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"20px\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          LeaderBoard\r\n        </NavLink>\r\n        <NavLink\r\n          className={menuButton}\r\n          to=\"/contact\"\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"20px\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          Contact\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <AppBar className={nav ? headerActive : header} elevation={0}>\r\n        {mobileView ? displayMobile() : displayDesktop()}\r\n      </AppBar>\r\n    </header>\r\n  );\r\n}\r\n","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Footer\\Footer.js",["108","109"],"import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport FooterContact from \"./FooterContact\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport \"../../App.css\";\r\n\r\nconst Footer = ({}) => {\r\n  const location = useLocation();\r\n  let { id } = useParams();\r\n  return (\r\n    location.pathname !== \"/tasks\" && location.pathname !== \"/onlinetest\" && location.pathname !== \"/task/:id\" && (\r\n      <footer>\r\n        <div className=\"content\">\r\n          <div className=\"about\">\r\n            <p className=\"answer\">\r\n            BITS is The First-Ever Task-Based Intra-School ICT competition, organized by the Ananda College ICT Society to provide a platform for our school's students to polish and improve their ICT knowledge in many fields of ICT\r\n            </p>\r\n            < FooterContact />\r\n          </div>\r\n          <div className=\"footer-nav\">\r\n          <NavLink\r\n          className=\"menuButton\"\r\n          to=\"/\"\r\n          exact\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"20px\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          Home\r\n        </NavLink>\r\n        <NavLink\r\n          className=\"menuButton\"\r\n          to=\"/tasks\"\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"20px\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          Tasks\r\n        </NavLink>\r\n        <NavLink\r\n          className=\"menuButton\"\r\n          to=\"/onlinetest\"\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"20px\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          Online Tests\r\n        </NavLink>\r\n        <NavLink\r\n          className=\"menuButton\"\r\n          to=\"/leaderboard\"\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"20px\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          LeaderBoard\r\n        </NavLink>\r\n        <NavLink\r\n          className=\"menuButton\"\r\n          to=\"/contact\"\r\n          activeStyle={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"20px\",\r\n            color: \"#3ed1b8\",\r\n          }}\r\n        >\r\n          Contact\r\n        </NavLink> \r\n          </div>\r\n           <div className=\"footer-nav\">\r\n           <div className=\"footer-nav\">\r\n            <a href=\"https://acicts.github.io/bits-official/\">BITS '18</a>\r\n            <a href=\"https://acicts.github.io/BITS19/\">BITS '19</a>\r\n            <a href=\"https://acicts.github.io/BITS20/index.html\">BITS '20</a>\r\n          </div>\r\n     </div>\r\n          <span id=\"copyrights\">Copyright Reserved. ACICTS© 2021 </span>\r\n        </div>\r\n      </footer>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Tasks\\TaskPage.js",[],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Home\\Charts.js",[],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\OnlineTest\\onlineTest.js",["110"],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Contact\\OC.js",["111","112","113"],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Home\\Header.js",["114","115"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core'; \r\nimport theme from '../../theme'  \r\nimport {ReactComponent as Logo} from '../../Img/hero.svg';\r\nimport Countdown, { doubleDigit } from 'react-downcount'\r\n\r\n\r\nexport default function Header() {\r\n    const useStyles = makeStyles({\r\n        headerContainer: {\r\n            width: '95%',\r\n            margin: 'auto',\r\n            marginTop: '8%',\r\n            [theme.breakpoints.down('md')]: {\r\n                marginTop: '4%'\r\n            },\r\n            [theme.breakpoints.down('xs')]: {\r\n                marginTop: '0'\r\n            },\r\n            \r\n        },\r\n\r\n        hero: {\r\n            padding: '40px',\r\n            paddingTop: '170px'\r\n        },\r\n        svg: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-end',\r\n            [theme.breakpoints.down('lg')]: {\r\n                alignItems: 'center',\r\n            },\r\n        },\r\n        logo: {\r\n            [theme.breakpoints.down('lg')]: {\r\n                width: '100%',\r\n            height: 'auto'\r\n            },\r\n        },\r\n\r\n    });\r\n    const classes = useStyles();\r\n\r\n    const endDate = new Date('2021-08-01')\r\n  endDate.setHours(endDate.getHours() - 5)\r\n  endDate.setMinutes(endDate.getMinutes() - 28)\r\n\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <Grid container className={classes.headerContainer}>\r\n                <Grid item  xl={6} lg={6} md={12} sm={12} xs={12} className={classes.hero}>\r\n                    <Typography variant='h2' gutterBottom=\"true\" align='left' style={{marginBottom: '50px', fontWeight: 'bold'}}>BITS 2021</Typography>\r\n\r\n                    <div className=\"countdown\">TASKS ARE NOW AVAILABLE !\r\n                    <br></br>\r\n                    It's your time to shine\r\n                    </div>\r\n\r\n                    <Typography variant='h5'  align='left' style={{marginBottom: '50px'}}><span style={{color: '#3ed1b8'}}>The First-Ever Task-Based Intra-School ICT competition,</span>  organized by the Ananda College ICT Society to provide a platform for our school's students to polish and improve their ICT knowledge in many fields of ICT</Typography>\r\n\r\n                    <Button variant='outlined' target=\"_blank\" color='secondary' href='https://docs.google.com/forms/d/e/1FAIpQLSfJIXV6-3WYIpqv92mHcVcDfZpBnWPEizbTOJ18g61oOSL8gA/viewform'>Register Now</Button>\r\n                    <Button variant='contained' href='#catt' color='secondary' style={{color: '#000', marginLeft: '20px'}}>More Info</Button>\r\n                </Grid>\r\n                <Grid item xl={6} lg={6} md={12} sm={12} xs={12} className={classes.svg}>\r\n\r\n                <div className={classes.svgContainer}><Logo className={classes.logo}/></div> \r\n\r\n                    \r\n                    \r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Contact\\Groups.js",[],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Home\\Quotes.js",[],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Home\\Categories.js",[],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Tasks\\TaskCard.js",[],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Footer\\FooterContact.js",[],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Home\\PartiChart.js",[],"C:\\Users\\chamindu\\Desktop\\BITS21\\src\\Components\\Contact\\Contributors.js",["116","117","118","119","120","121","122","123","124"],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":20},{"ruleId":"129","severity":1,"message":"133","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":80,"column":5,"nodeType":"136","messageId":"137","endLine":80,"endColumn":14},{"ruleId":"129","severity":1,"message":"138","line":15,"column":10,"nodeType":"131","messageId":"132","endLine":15,"endColumn":15},{"ruleId":"129","severity":1,"message":"139","line":12,"column":8,"nodeType":"131","messageId":"132","endLine":12,"endColumn":17},{"ruleId":"140","severity":1,"message":"141","line":7,"column":17,"nodeType":"142","messageId":"137","endLine":7,"endColumn":19},{"ruleId":"129","severity":1,"message":"143","line":9,"column":9,"nodeType":"131","messageId":"132","endLine":9,"endColumn":11},{"ruleId":"129","severity":1,"message":"144","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":13},{"ruleId":"129","severity":1,"message":"145","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":19},{"ruleId":"129","severity":1,"message":"146","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":14},{"ruleId":"129","severity":1,"message":"147","line":11,"column":8,"nodeType":"131","messageId":"132","endLine":11,"endColumn":14},{"ruleId":"129","severity":1,"message":"139","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":17},{"ruleId":"129","severity":1,"message":"148","line":6,"column":21,"nodeType":"131","messageId":"132","endLine":6,"endColumn":32},{"ruleId":"129","severity":1,"message":"149","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":18},{"ruleId":"129","severity":1,"message":"145","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":19},{"ruleId":"129","severity":1,"message":"150","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":19},{"ruleId":"129","severity":1,"message":"146","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":14},{"ruleId":"129","severity":1,"message":"151","line":8,"column":8,"nodeType":"131","messageId":"132","endLine":8,"endColumn":18},{"ruleId":"129","severity":1,"message":"147","line":11,"column":8,"nodeType":"131","messageId":"132","endLine":11,"endColumn":14},{"ruleId":"129","severity":1,"message":"152","line":12,"column":10,"nodeType":"131","messageId":"132","endLine":12,"endColumn":16},{"ruleId":"129","severity":1,"message":"153","line":12,"column":18,"nodeType":"131","messageId":"132","endLine":12,"endColumn":27},{"ruleId":"129","severity":1,"message":"154","line":12,"column":29,"nodeType":"131","messageId":"132","endLine":12,"endColumn":34},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Charts' is defined but never used.","no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","unexpected","'Group' is defined but never used.","'Countdown' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'id' is assigned a value but never used.","'Tests' is defined but never used.","'CardContent' is defined but never used.","'Avatar' is defined but never used.","'catImg' is defined but never used.","'doubleDigit' is defined but never used.","'CardHeader' is defined but never used.","'CardActions' is defined but never used.","'IconButton' is defined but never used.","'GitHub' is defined but never used.","'Instagram' is defined but never used.","'Phone' is defined but never used.","no-global-assign","no-unsafe-negation"]